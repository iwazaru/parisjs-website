{"filename":"2017-09-27.md","date":"2017-09-27","edition":"67","host":"Snips","sponsors":[],"meetupLink":"https://www.meetup.com/fr-FR/Paris-js/events/243414540/","talks":[{"title":"NodeJs Event Loop","extract":"Suite à une récente key note de Bert Belder concernant l'event loop de NodeJs je peux proposer de revenir sur son intervention et plus généralement sur le fonctionnement de l'event loop + libUv qui sont au coeur du fonctionnement de NodeJs.\nÇa permet de revenir sur les briques de bases de Node mais aussi de démystifier un peu certaines choses et de faire la part entre mythes et réalité.","authors":[{"name":"Vincent","url":null,"avatar":null}],"slides":[],"links":[],"videos":[]},{"title":"Reason","extract":"La next step de JS: Pourquoi JS est insuffisant. Comment régler le problème à l'échelle de JS. Comment VRAIMENT régler le problème.","authors":[{"name":"Mattias","url":"https://twitter.com/bloodyowl","avatar":"https://twitter.com/bloodyowl/profile_image?size=bigger"}],"slides":[],"links":[],"videos":[]},{"title":"Time for IntersectionObserver - a performant and easy to use alternative to scroll handlers for in view detection","extract":"Lazy loading content, tracking impression, animation triggers\n- for many years we have utilised scroll handlers to detect when\nto trigger such actions. Now modern browsers are supporting\nIntersectionObserver, a new API that comes with better performance, and results in cleaner code.\n\nIn this talk I will show you what Intersection Observer is,\nwhat type of code it replaces and why it is a better alternative.","authors":[{"name":"Jonas","url":null,"avatar":null}],"slides":[],"links":[],"videos":[]}],"body":{"t":"div"}}